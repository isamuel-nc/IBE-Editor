import groovy.json.JsonSlurper

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
    id "net.darkhax.curseforgegradle" version "1.0.10"
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
    id "com.github.breadmoirai.github-release" version "2.4.1"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.16.5+build.9:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = "${rootProject.archives_base_name}-${rootProject.minecraft_version}"
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release.set(rootProject.java_version as Integer)
    }

    java {
        withSourcesJar()
    }

    ext {
        def slurper = new JsonSlurper()
        def versionInfo = slurper.parse(rootProject.file("versions.json"))."${version}"
        versionInfoType = versionInfo.type
        versionInfoChangelog = versionInfo.changelog
        compatibleGameVersions = slurper.parseText(rootProject.compatible_minecraft_versions as String) as List<String>
        curseforgeProjectId = "256822"
        modrinthProjectId = "E9sX1ncV"
    }
}

githubRelease {
    setToken(findProperty("github_token") as String ?: System.getenv("GITHUB_TOKEN") ?: "")
    setOwner("skyecodes")
    setRepo("IBE-Editor")
    setTagName("${version}+${rootProject.major_minecraft_version}")
    setTargetCommitish(findProperty("git_branch") as String ?: System.getenv("GIT_BRANCH") ?: "")
    setReleaseName("IBE Editor v${version} for Minecraft ${rootProject.minecraft_version}")
    setBody(versionInfoChangelog)
    setPrerelease(versionInfoType == "alpha")
    setReleaseAssets(project(":fabric").remapJar, project(":forge").remapJar)
}